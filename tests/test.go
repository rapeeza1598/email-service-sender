package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

func testEmailService() {
	// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
	fmt.Println("üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö Email Service...")

	// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
	testPayment := map[string]interface{}{
		"account":          "‡∏ô‡∏≤‡∏¢ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö",
		"transactionId":    "TEST123456789",
		"transferDate":     time.Now().Format("2006-01-02"),
		"transferTime":     time.Now().Format("15:04"),
		"recipientAccount": "123-456-7890",
		"amount":           1500.00,
		"additional":       "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πà‡∏á‡πÄ‡∏°‡∏•",
	}

	jsonData, _ := json.Marshal(testPayment)

	// ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á API
	resp, err := http.Post("http://localhost:3000/api/payment-notification",
		"application/json",
		bytes.NewBuffer(jsonData))

	if err != nil {
		fmt.Printf("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ: %v\n", err)
		return
	}
	defer resp.Body.Close()

	fmt.Printf("‚úÖ Response Status: %s\n", resp.Status)

	// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏π logs
	logResp, err := http.Get("http://localhost:3000/api/logs/TEST123456789")
	if err != nil {
		fmt.Printf("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π logs ‡πÑ‡∏î‡πâ: %v\n", err)
		return
	}
	defer logResp.Body.Close()

	fmt.Printf("‚úÖ Log Response Status: %s\n", logResp.Status)
	fmt.Println("üéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
}

func main() {
	// ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
	time.Sleep(2 * time.Second)
	testEmailService()
}
